// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator jsonSchema {
  provider              = "prisma-json-schema-generator"
  includeRequiredFields = "true"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Type {
  smoothie
  suplemento
}

model AdminUser {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String

  @@map("usuarios_admin")
}

model Customer {
  id          Int      @id @default(autoincrement())
  name        String   @map("nome")
  email       String   @unique
  cpf         String   @unique
  phoneNumber String   @map("telefone")
  createdAt   DateTime @default(now()) @map("data_cadastro")

  purchase    Purchase[]
  award       Award[]
  cardLoyalty CardLoyalty[]

  @@map("clientes")
}

model Purchase {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("data_compra")
  type      Type     @map("tipo")
  amount    Float    @map("valor")

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int      @map("cliente_id")

  @@map("compra")
}

model Award {
  id                  Int      @id @default(autoincrement())
  type                Type     @map("tipo")
  awardRoundStartedAt DateTime @map("data_inicio_do_ciclo_de_premio")
  awardRoundEndedAt   DateTime @default(now()) @map("data_fim_do_ciclo_de_premio")

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int      @map("cliente_id")

  @@map("premio")
}

model CardLoyalty {
  type         Type      @map("tipo")
  roundStartAt DateTime? @map("data_inicio_do_ciclo")
  roundEndAt   DateTime? @map("data_fim_do_ciclo")
  points       Int       @map("pontos")

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int      @map("cliente_id")

  @@id([customerId, type])
  @@unique([customerId, type])
  @@map("cartao_fidelidade")
}
